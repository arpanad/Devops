[ec2-user@ip-172-31-40-240 ~]$ docker

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default "/home/ec2-user/.docker")
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level ("debug"|"info"|"warn"|"error"|"fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/home/ec2-user/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/home/ec2-user/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/home/ec2-user/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  builder     Manage builds
  config      Manage Docker configs
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  stack       Manage Docker stacks
  swarm       Manage Swarm
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

To get more help with docker, check out our guides at https://docs.docker.com/go/guides/
[ec2-user@ip-172-31-40-240 ~]$


[ec2-user@ip-172-31-40-240 ~]$ docker info
Client:
 Context:    default
 Debug Mode: false

Server:
 Containers: 2
  Running: 0
  Paused: 0
  Stopped: 2
 Images: 2
 Server Version: 20.10.17
 Storage Driver: overlay2
  Backing Filesystem: xfs
  Supports d_type: true
  Native Overlay Diff: true
  userxattr: false
 Logging Driver: json-file
 Cgroup Driver: cgroupfs
 Cgroup Version: 1
 Plugins:
  Volume: local
  Network: bridge host ipvlan macvlan null overlay
  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog
 Swarm: inactive
 Runtimes: io.containerd.runc.v2 io.containerd.runtime.v1.linux runc
 Default Runtime: runc
 Init Binary: docker-init
 containerd version: 9cd3357b7fd7218e4aec3eae239db1f68a5a6ec6
 runc version: 5fd4c4d144137e991c4acebb2146ab1483a97925
 init version: de40ad0
 Security Options:
  seccomp
   Profile: default
 Kernel Version: 5.10.165-143.735.amzn2.x86_64
 Operating System: Amazon Linux 2
 OSType: linux
 Architecture: x86_64
 CPUs: 1
 Total Memory: 964.8MiB
 Name: ip-172-31-40-240.ap-northeast-1.compute.internal
 ID: FPWZ:2TAH:A64G:S7NP:ICHT:MFIB:W4DI:WQU4:7VMD:JYD7:GXIV:GIMB
 Docker Root Dir: /var/lib/docker
 Debug Mode: false
 Registry: https://index.docker.io/v1/
 Labels:
 Experimental: false
 Insecure Registries:
  127.0.0.0/8
 Live Restore Enabled: false

[ec2-user@ip-172-31-40-240 ~]$



[ec2-user@ip-172-31-40-240 ~]$ docker images
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
nginx         latest    3f8a00f137a0   2 days ago      142MB
hello-world   latest    feb5d9fea6a5   16 months ago   13.3kB
hello-world   linux     feb5d9fea6a5   16 months ago   13.3kB
[ec2-user@ip-172-31-40-240 ~]$


[ec2-user@ip-172-31-40-240 ~]$ docker pull python
Using default tag: latest
latest: Pulling from library/python
1e4aec178e08: Pull complete
6c1024729fee: Pull complete
c3aa11fbc85a: Pull complete
aa54add66b3a: Pull complete
9e3a60c2bce7: Pull complete
3b2123ce9d0d: Pull complete
05df7720fcb8: Pull complete
972ab8743e38: Pull complete
ae9f20f2cd37: Pull complete
Digest: sha256:e7e3b031dbf71514d0a8d759d8417b04f8dcf483aec18d69abd1a2b3955297b6
Status: Downloaded newer image for python:latest
docker.io/library/python:latest
[ec2-user@ip-172-31-40-240 ~]$

[ec2-user@ip-172-31-40-240 ~]$ docker create python
8066ebc2b3d4d43678e1a688aadb71b1e5d819df58aeb422c347fe77011c6b44
[ec2-user@ip-172-31-40-240 ~]$ docker images
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
python        latest    f92346e0c39e   13 hours ago    925MB
nginx         latest    3f8a00f137a0   2 days ago      142MB
hello-world   latest    feb5d9fea6a5   16 months ago   13.3kB
hello-world   linux     feb5d9fea6a5   16 months ago   13.3kB
[ec2-user@ip-172-31-40-240 ~]$
[ec2-user@ip-172-31-40-240 ~]$
[ec2-user@ip-172-31-40-240 ~]$ docker images -a
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
python        latest    f92346e0c39e   13 hours ago    925MB
nginx         latest    3f8a00f137a0   2 days ago      142MB
hello-world   latest    feb5d9fea6a5   16 months ago   13.3kB
hello-world   linux     feb5d9fea6a5   16 months ago   13.3kB


[ec2-user@ip-172-31-40-240 ~]$ docker run nginx
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2023/02/11 15:17:05 [notice] 1#1: using the "epoll" event method
2023/02/11 15:17:05 [notice] 1#1: nginx/1.23.3
2023/02/11 15:17:05 [notice] 1#1: built by gcc 10.2.1 20210110 (Debian 10.2.1-6)
2023/02/11 15:17:05 [notice] 1#1: OS: Linux 5.10.165-143.735.amzn2.x86_64
2023/02/11 15:17:05 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 32768:65536
2023/02/11 15:17:05 [notice] 1#1: start worker processes
2023/02/11 15:17:05 [notice] 1#1: start worker process 29
2023/02/11 15:18:10 [notice] 1#1: signal 3 (SIGQUIT) received, shutting down
2023/02/11 15:18:10 [notice] 29#29: gracefully shutting down
2023/02/11 15:18:10 [notice] 29#29: exiting
2023/02/11 15:18:10 [notice] 29#29: exit
2023/02/11 15:18:10 [notice] 1#1: signal 17 (SIGCHLD) received from 29
2023/02/11 15:18:10 [notice] 1#1: worker process 29 exited with code 0
2023/02/11 15:18:10 [notice] 1#1: exit
[ec2-user@ip-172-31-40-240 ~]$




[ec2-user@ip-172-31-40-240 ~]$ docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS     NAMES
592a98e4c70a   nginx     "/docker-entrypoint.…"   20 seconds ago   Up 19 seconds   80/tcp    eloquent_montalcini
[ec2-user@ip-172-31-40-240 ~]$


[ec2-user@ip-172-31-40-240 ~]$ docker pause 592a98e4c70a
592a98e4c70a
[ec2-user@ip-172-31-40-240 ~]$
[ec2-user@ip-172-31-40-240 ~]$
[ec2-user@ip-172-31-40-240 ~]$ docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS                   PORTS     NAMES
592a98e4c70a   nginx     "/docker-entrypoint.…"   35 seconds ago   Up 34 seconds (Paused)   80/tcp    eloquent_montalcini
[ec2-user@ip-172-31-40-240 ~]$


[ec2-user@ip-172-31-40-240 ~]$ docker unpause 592a98e4c70a
592a98e4c70a
[ec2-user@ip-172-31-40-240 ~]$
[ec2-user@ip-172-31-40-240 ~]$
[ec2-user@ip-172-31-40-240 ~]$ docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS     NAMES
592a98e4c70a   nginx     "/docker-entrypoint.…"   47 seconds ago   Up 46 seconds   80/tcp    eloquent_montalcini
[ec2-user@ip-172-31-40-240 ~]$



[ec2-user@ip-172-31-40-240 ~]$ docker stop 592a98e4c70a
592a98e4c70a
[ec2-user@ip-172-31-40-240 ~]$
[ec2-user@ip-172-31-40-240 ~]$
[ec2-user@ip-172-31-40-240 ~]$ docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
[ec2-user@ip-172-31-40-240 ~]$



[ec2-user@ip-172-31-40-240 ~]$ docker rm 592a98e4c70a
592a98e4c70a
[ec2-user@ip-172-31-40-240 ~]$



[ec2-user@ip-172-31-40-240 ~]$
[ec2-user@ip-172-31-40-240 ~]$ docker history nginx
IMAGE          CREATED      CREATED BY                                      SIZE      COMMENT
3f8a00f137a0   2 days ago   /bin/sh -c #(nop)  CMD ["nginx" "-g" "daemon…   0B
<missing>      2 days ago   /bin/sh -c #(nop)  STOPSIGNAL SIGQUIT           0B
<missing>      2 days ago   /bin/sh -c #(nop)  EXPOSE 80                    0B
<missing>      2 days ago   /bin/sh -c #(nop)  ENTRYPOINT ["/docker-entr…   0B
<missing>      2 days ago   /bin/sh -c #(nop) COPY file:e57eef017a414ca7…   4.62kB
<missing>      2 days ago   /bin/sh -c #(nop) COPY file:abbcbf84dc17ee44…   1.27kB
<missing>      2 days ago   /bin/sh -c #(nop) COPY file:5c18272734349488…   2.12kB
<missing>      2 days ago   /bin/sh -c #(nop) COPY file:7b307b62e82255f0…   1.62kB
<missing>      2 days ago   /bin/sh -c set -x     && addgroup --system -…   61.3MB
<missing>      2 days ago   /bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye   0B
<missing>      2 days ago   /bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9        0B
<missing>      2 days ago   /bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3     0B
<missing>      2 days ago   /bin/sh -c #(nop)  LABEL maintainer=NGINX Do…   0B
<missing>      2 days ago   /bin/sh -c #(nop)  CMD ["bash"]                 0B
<missing>      2 days ago   /bin/sh -c #(nop) ADD file:3ea7c69e4bfac2ebb…   80.5MB
[ec2-user@ip-172-31-40-240 ~]$




[ec2-user@ip-172-31-40-240 ~]$ docker --version
Docker version 20.10.17, build 100c701



[ec2-user@ip-172-31-40-240 ~]$
[ec2-user@ip-172-31-40-240 ~]$ docker version
Client:
 Version:           20.10.17
 API version:       1.41
 Go version:        go1.18.6
 Git commit:        100c701
 Built:             Sat Dec  3 04:13:49 2022
 OS/Arch:           linux/amd64
 Context:           default
 Experimental:      true

Server:
 Engine:
  Version:          20.10.17
  API version:      1.41 (minimum version 1.12)
  Go version:       go1.18.6
  Git commit:       a89b842
  Built:            Sat Dec  3 04:14:27 2022
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          1.6.8
  GitCommit:        9cd3357b7fd7218e4aec3eae239db1f68a5a6ec6
 runc:
  Version:          1.1.4
  GitCommit:        5fd4c4d144137e991c4acebb2146ab1483a97925
 docker-init:
  Version:          0.19.0
  GitCommit:        de40ad0
[ec2-user@ip-172-31-40-240 ~]$



[ec2-user@ip-172-31-40-240 ~]$ docker pull ubuntu
Using default tag: latest
latest: Pulling from library/ubuntu
677076032cca: Pull complete
Digest: sha256:9a0bdde4188b896a372804be2384015e90e3f84906b750c1a53539b585fbbe7f
Status: Downloaded newer image for ubuntu:latest
docker.io/library/ubuntu:latest



[ec2-user@ip-172-31-40-240 ~]$ docker run -it -d ubuntu
14e63a9d80bb4430b59f89d4636bb46200b0a1b54656229bc88b8bb6530af1f8
[ec2-user@ip-172-31-40-240 ~]$



[ec2-user@ip-172-31-40-240 ~]$ docker ps
CONTAINER ID   IMAGE     COMMAND       CREATED          STATUS          PORTS     NAMES
14e63a9d80bb   ubuntu    "/bin/bash"   18 seconds ago   Up 17 seconds             hungry_cannon
[ec2-user@ip-172-31-40-240 ~]$
[ec2-user@ip-172-31-40-240 ~]$



[ec2-user@ip-172-31-40-240 ~]$ docker ps -a
CONTAINER ID   IMAGE         COMMAND                  CREATED          STATUS                      PORTS     NAMES
14e63a9d80bb   ubuntu        "/bin/bash"              24 seconds ago   Up 24 seconds                         hungry_cannon
a75d749d509d   nginx         "/docker-entrypoint.…"   9 minutes ago    Exited (0) 9 minutes ago              zealous_wescoff
6affc577edf2   python        "python3"                12 minutes ago   Exited (0) 12 minutes ago             hopeful_shtern
8066ebc2b3d4   python        "python3"                13 minutes ago   Created                               agitated_hopper
fae48b818cb3   hello-world   "/hello"                 9 hours ago      Exited (0) 9 hours ago                thirsty_elgamal
597a2f6dfb36   hello-world   "/hello"                 10 hours ago     Exited (0) 10 hours ago               stoic_engelbart
[ec2-user@ip-172-31-40-240 ~]$
[ec2-user@ip-172-31-40-240 ~]$



[ec2-user@ip-172-31-40-240 ~]$ docker exec -it 14e63a9d80bb bash
root@14e63a9d80bb:/#
root@14e63a9d80bb:/#
root@14e63a9d80bb:/# ls
bin  boot  dev  etc  home  lib  lib32  lib64  libx32  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@14e63a9d80bb:/#
root@14e63a9d80bb:/#
root@14e63a9d80bb:/# whoami
root
root@14e63a9d80bb:/#
root@14e63a9d80bb:/#
root@14e63a9d80bb:/# pwd
/
root@14e63a9d80bb:/#
root@14e63a9d80bb:/# exit
exit
[ec2-user@ip-172-31-40-240 ~]$



[ec2-user@ip-172-31-40-240 ~]$ docker stop 14e63a9d80bb
14e63a9d80bb
[ec2-user@ip-172-31-40-240 ~]$
[ec2-user@ip-172-31-40-240 ~]$
[ec2-user@ip-172-31-40-240 ~]$ docker login
Login with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.
Username: arpana95
Password:
WARNING! Your password will be stored unencrypted in /home/ec2-user/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
[ec2-user@ip-172-31-40-240 ~]$




